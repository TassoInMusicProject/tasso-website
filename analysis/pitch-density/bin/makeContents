#!/usr/bin/perl
# vim: ts=3

use strict;

my @PAGESCRIPT;
my $PAGE = 1;
my $COUNT = 0;
my $PAGESIZE = 20;

my $scoredir = "../../../tasso-scores";
my $imgdir = "img";
my $datadir = "data";
my @files = glob("$scoredir/*/kern/*.krn");

my @rimefiles;
my @nonrimefiles;

for (my $i=0; $i<@files; $i++) {
	if ($files[$i] =~ /Trm\d{4}[a-z]+-/) {
		push(@rimefiles, $files[$i]);
	} else {
		push(@nonrimefiles, $files[$i]);
	}
}

my @allfiles = @rimefiles;
push(@allfiles, @nonrimefiles);

my $width = "100%";

print "<div style='margin-bottom:50px;'  class=\"page-list\"></div>\n";

print "<div style=\"display:none;\" id=\"page1\">\n";
my $file;
foreach $file (@allfiles) {
	processFile($file);
}
print "</div>\n";

my $pagefunctions = createPageFunctions();
print $pagefunctions, "\n";

print "<div style='margin-bottom:50px;'  class=\"page-list\"></div>\n";

exit(0);


###########################################################################


##############################
##
## processFile --
##

sub processFile {
	my ($file) = @_;
	open (FILE, $file) or die "Cannot read $file\n";
	my @contents = <FILE>;
	close FILE;
	my $complete = "N";
	my $composer = "";
	my $title = "";
	my $final = "";
	my $publicationdate = "";
	my $rime = "";
	my $id = $file;

	if ($COUNT >= $PAGESIZE) {
		print "</div>\n";
		$PAGE++;
		print "<div style=\"display:none;\" id=\"page$PAGE\">\n";
		$COUNT = 0;
	}

	$id =~ s/.*\///;
	$id =~ s/-.*//;
	foreach my $line (@contents) {
		if ($line =~ /^\!\!\!complete:\s*(.*)\s*/) {
			$complete = $1;
		}
		if ($line =~ /^\!\!\!COM:\s*(.*)\s*/) {
			$composer = $1;
		}
		if ($line =~ /^\!\!\!OTL:\s*(.*)\s*/) {
			$title = $1;
		}
		if ($line =~ /^\!\!\!rime:\s*(.*)\s*/) {
			$rime = "(rime $1)";
		}
		if ($line =~ /^\!\!\!PDT:\s*(.*)\s*/) {
			$publicationdate = $1;
		}
		if ($line =~ /^\!\!\!final:\s*(.*)\s*/) {
			$final = $1;
		}
	}
	return if $complete !~ /Y/i;

	$COUNT++;

	my $base = $file;
	$base =~ s/.*\///;
	$base =~ s/\.krn$//;
	my $id = $base;
	$id =~ s/-.*//;

	my $htmldur = `cat $datadir/$id-duration.html`;
	my $htmlcount = `cat $datadir/$id-count.html`;

	if ($htmldur =~ s/^(vegaEmbed.*)$//m) {
		$PAGESCRIPT[$PAGE] .= "\n\t$1";
		# print STDERR "VEGADUR: $1\n";
	}

	if ($htmlcount =~ s/^(vegaEmbed.*)$//m) {
		$PAGESCRIPT[$PAGE] .= "\n\t$1";
		# print STDERR "VEGACOUNT: $1\n";
	}

	my $keysig = getKeySig($file);
	my $clefs = getClefs($file);;

	if (-r "$imgdir/$id.png") {
	print << "EOT";

<style>
td.right {
	text-align: right;
	font-weight: bold;
}
td.right:after {
	content: ":";
}
</style>

<table style="width:100%;">

<tr style="width:100%;">
<td style="width:600px;">

<table style="width:600px; display:inline-block; margin-bottom:50px; padding-left:20px; padding-right:20px; vertical-align:top;">

<tr>
	<td class="right">
		<b>ID</b>
	</td>
	<td>
		<a target="_blank" href="http://tassomusic.org/work/?id=$id">$id</a>
	</td>
</tr>

<tr>
	<td class="right">
		<b>Composer</b>
	</td>
	<td>
		$composer / $publicationdate
	</td>
</tr>

<tr>
	<td class="right">
		<b>Title</b>
	</td>
	<td>
		<i>$title</i> $rime
	</td>
</tr>

<!--
</table>
</td>
<td>
<table style="display:inline-block; padding-left:20px; padding-right:20px; vertical-align:top;">
-->

<tr>
	<td class="right">
		<b>Final</b>
	</td>
	<td>
		$final
	</td>
</tr>

<tr>
	<td class="right">
		<b>Key sig.</b>
	</td>
	<td>
		$keysig
	</td>
</tr>

<tr>
	<td class="right">
		<b>Clefs</b>
	</td>
	<td>
		$clefs
	</td>
</tr>

</table>

</td>
</tr>

</table>



<table style="display:inline-block; margin-left:-40px; padding-left:-40px; padding-right:20px; vertical-align:top; width:100%;">
<tr>

	<td>
		$htmldur
	</td>

	<td>
		$htmlcount
	</td>

</tr>
</table>

<br/>

<table style="display:inline-block; margins: auto; padding-left:180px; padding-right:0px; vertical-align:top;">
<tr>
	<td style="text-align: center; margin-left:200px; position:relative;">
		<div style="text-align:center; width:100%; padding-right:20px;">
			<b>Pitchscape</b> 
		</div>
		<a target="_blank" href="$imgdir/$id.png"><img width="100%" src="$imgdir/$id.png"></a>
		<div id="audio_$id" style="cursor:pointer;" onclick="PlayAudioFile('$id', this);" class="play">play</div>
	</td>
</tr>
</table>

<br/>
<hr noshade>
<br/>

EOT
}


}


# (The most common duration-weighted pitch class at 
# 			various timescales in the piece. The apex of the pitchscape 
# 			indicates the maximum pitch class for the entire duration of 
# 			the piece as shown in the above/left histogram.  The lower right
# 			corner of the plot indicates the final pitch.)


##############################
##
## getKeySig --
##

sub getKeySig {
	my ($file) = @_;
	return "?????????" if $file =~ /^\s*$/;
	my @data = `grep '\*k[[].*[]]' $file`;
	my $keyline = $data[0];
	if ($keyline =~ /\*k[[]([^\t]*)[]]/) {
		my $value = $1;
		return "&#x266d;" if $value eq "b-";
		return "&#x266d;" if $value eq "B-";
		return "&#x266e;" if $value eq "";
		return "&#x266f;" if $value eq "f#";
		return "&#x266f;" if $value eq "F#";
		return "$value";
	}
	return "?";
}



##############################
##
## getClefs --
##

sub getClefs {
	my ($file) = @_;
	return "?????????" if $file =~ /^\s*$/;
	my @data = `grep '\*oclef' $file`;
	my $clefline = $data[0];
	@data = split(/\t/, $clefline);
	my $output = "";
	for (my $i = $#data; $i>=0; $i--) {
		if ($data[$i] =~ /oclef([CGF]\d)/) {
			$output .= ", $1";
		}
	}
	$output =~ s/^, //;
	return $output;
}


##############################
##
## createPageFunctions --
##

sub createPageFunctions {
	my $output = "";
	$output .= "<script>\n";
	for (my $page = 1; $page <= $PAGE; $page++) {
		$output .= "\nfunction displayPage$page() {\n";
		$output .= "\tclearAllPagesExcept($page);";
		$output .= $PAGESCRIPT[$page];
		$output .= "\n";
		$output .= "}\n";
	}

	$output .= "\nfunction clearAllPagesExcept(page) {\n";

	$output .= "	displayPageList(page);\n";
	$output .= "	var pages = document.querySelectorAll('[id^=page]');\n";
	$output .= "	for (var i=0; i<pages.length; i++) {\n";
	$output .= "		var pid = pages[i].id;\n";
	$output .= "		var matches = pid.match(/^page(\\d+)\$/);\n";
	$output .= "		if (!matches) {\n";
	$output .= "			continue;\n";
	$output .= "		}\n";
	$output .= "		var pnum = parseInt(matches[1]);\n";
	$output .= "		if (pnum == page) {\n";
	$output .= "			continue;\n";
	$output .= "		}\n";
	$output .= "		pages[i].style.display = 'none';\n";
	$output .= "		// clear out old images\n";
	$output .= "		var svgs = pages[i].querySelectorAll('.vega-svg');\n";
	$output .= "		for (var j=0; j<svgs.length; j++) {\n";
	$output .= "			svgs[j].innerHTML = '';\n";
	$output .= "		}\n";
	$output .= "	}\n";
	$output .= "	var target = document.querySelector('#page' + page);\n";
	$output .= "	if (!target) {\n";
	$output .= "		return;\n";
	$output .= "	}\n";
	$output .= "	target.style.display = 'block';\n";

	$output .= "}\n\n";

	$output .= "	document.addEventListener('DOMContentLoaded', function () {\n";
	$output .= "		displayPage1();\n";
	$output .= "	});\n\n";


	$output .= "function displayPageList(page) {\n";

	$output .= "	var lists = document.querySelectorAll('.page-list');\n";
	$output .= "	var output;\n";
	$output .= "	var maxpage = $PAGE;\n";
	$output .= "	for (var i=0; i<lists.length; i++) {\n";
	$output .= "		output = '';\n";
	$output .= "		output += 'Go to page: ';\n";
	$output .= "		for (var j=1; j<=maxpage; j++) {\n";
	$output .= "			if (j == page) {\n";
	$output .= "				output += j;\n";
	$output .= "			} else {\n";
	$output .= "				output += \"<span class='active-page' onclick='displayPage\" + j + \"()'>\" + j + \"</span>\";\n";
	$output .= "			}\n";
	$output .= "			if (j < maxpage) {\n";
	$output .= "				output += ', ';\n";
	$output .= "			}\n";
	$output .= "		}\n";
	$output .= "		output += '<br/>'\n";
	$output .= "		lists[i].innerHTML = output;\n";
	$output .= "	}\n";

	$output .= "}\n\n";

	$output .= "</script>\n\n";



	return $output;
}



